<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Overview</title>
    <link rel="stylesheet" href="/css/components/navbar.css">
    <link rel="stylesheet" href="/css/pages/overview.css">
    <link rel="stylesheet" href="/css/components/footer.css">
    <link rel="stylesheet" href="/css/components/toast.css">
    <script src="/javaScript/navbar/navToggle.js" defer></script>
    <script src="/javaScript/navbar/profile-icon-dropdown.js" defer></script>
    <script src="/javaScript/toast.js" defer></script>
</head>
<body>
    <%- include('./partials/navbar'); %>
    <%- include('./partials/toast'); %>
    <section class="product-overview">
        <div class="container">
            <div class="product-content">
                <div class="product-thumbnail"><img src="<%= product.image_url.startsWith('/') ? product.image_url : '/' + product.image_url %>" alt="<%= product.name %>"></div>
                <div class="product-information">
                    <div class="product-title">
                        <h1><%= product.name %></h1>
                    </div>

                    <div class="product-review">
                        <div class="stars">
                            <% const averageRating = parseFloat(average) || 0; %>
                            <% for(let i = 1; i <= 5; i++) { %>
                                <span class="star <%= i <= averageRating ? 'filled' : i <= (averageRating + 0.5) ? 'half-filled' : '' %>">★</span>
                            <% } %>
                        </div>
                        <span class="review-count">
                            <%= averageRating.toFixed(1) %> 
                            (<%= totalReviews || 0 %> reviews)
                        </span>
                    </div>
                    <div class="product-price" id="product-price">₱<%= product.lowest_price %> PHP</div>
                    <div class="product-description">
                        <p><%= product.description %></p>
                    </div>
                    <div class="product-variant-container">
                        <div class="product-weight-select">
                            <label for="weight">Weight</label>
                            <!-- Custom Dropdown -->
                            <div class="custom-select">
                                <div class="custom-select-trigger"><%= product.weight_variants[0].weight %><%= product.weight_variants[0].unit %></div>
                                <div class="custom-options">
                                    <% product.weight_variants.forEach(weight => { %>
                                        <div class="option" 
                                            data-value="<%= weight.weight_id %>" 
                                            data-price="<%= weight.price.toFixed(2) %>"
                                            data-stock="<%= weight.stock %>">
                                            <%= weight.weight %><%= weight.unit %>
                                        </div>
                                    <% }); %>
                                </div>
                            </div>
                            <!-- Stock information displayed below the select box -->
                            <div id="stock-info" class="stock-info">
                                Stock: <%= product.weight_variants[0].stock %>
                            </div>
                        </div>

                        <div class="product-quantity">
                            <label for="">Quantity</label>
                            <div class="quantity-btn-container">
                                <button class="quantity-btn" aria-label="Decrease quantity">-</button>
                                <input class="quantity-input" type="number" value="1" aria-label="Product quantity">
                                <button class="quantity-btn" aria-label="Increase quantity">+</button>
                            </div>
                        </div>
                    </div>
                    <div class="form-container">
                        <form action="/cart/add" method="post" class="form">
                            <input type="hidden" name="product_id" value="<%= product.id %>">
                            <input type="hidden" name="weight_id" id="selected-weight-id">
                            <input type="hidden" name="price" id="selected-price">
                            <% if (locals.user) { %>
                            <input type="hidden" name="user_id" value="<%= userId %>">
                            <% } %>
                            <input type="hidden" name="quantity" id="quantity" value="1">
                            <div class="product-form-btn">
                                <button type="submit" id="addToCartBtn" <%= product.total_stock === 0 ? 'disabled' : '' %>>Add to Cart</button>
                                <button type="button" id="buyNowBtn" <%= product.total_stock === 0 ? 'disabled' : '' %>>Buy it Now</button>
                                
                            </div>
                        </form>
                            <!-- Add this hidden form for buy now -->
                            <form action="/cart/buynow" method="post" id="buyNowForm" style="display: none;">
                                <input type="hidden" name="product_id" value="<%= product.id %>">
                                <input type="hidden" name="weight_id" id="buy-now-weight-id">
                                <input type="hidden" name="quantity" id="buy-now-quantity" value="1">
                            </form>
                    </div>
                    <div class="product-availability">Availability: <%= product.total_stock %> left in stock</div>
                </div>
            </div>
        </div>
    </section>

    <section class="product-details">
        <div class="product-details-container">
            <div class="tabs">
                <button class="tab-btn active" data-tab="description">Description</button>
                <button class="tab-btn" data-tab="reviews">Reviews</button>
            </div>
            
            <div class="tab-content">
                <div class="tab-pane active" id="description">
                    <h2>Product Description</h2>
                    <p><%= product.description %></p>
                </div>
                
                <div class="tab-pane" id="reviews">
                    <div class="reviews-header">
                        <h2>Customer Reviews</h2>
                    </div>
                    <!-- Reviews summary section -->
                    <div class="reviews-summary">
                        <div class="average-rating">
                            <h3><%= averageRating.toFixed(1) %></h3>
                            <div class="stars">
                                <% for(let i = 1; i <= 5; i++) { %>
                                    <span class="star <%= i <= averageRating ? 'filled' : i <= (averageRating + 0.5) ? 'half-filled' : '' %>">★</span>
                                <% } %>
                            </div>
                            <p>Based on <%= totalReviews || 0 %> reviews</p>
                        </div>
                        
                        <div class="rating-bars">
                            <% for(let i = 5; i >= 1; i--) { %>
                                <div class="rating-bar">
                                    <span><%= i %> stars</span>
                                    <div class="bar-container">
                                        <div class="bar" style="width: <%= (distribution[i] / reviews.length * 100) || 0 %>%"></div>
                                    </div>
                                    <span><%= distribution[i] || 0 %></span>
                                </div>
                            <% } %>
                        </div>
                    </div>
                    <button class="write-review-btn">Write a Review</button>

                    <div class="review-form" style="display: none;">
                        <% if (messages.error && messages.error.length > 0) { %>
                            <div class="alert alert-danger">
                                <%= messages.error %>
                            </div>
                        <% } %>
                        <% if (messages.success && messages.success.length > 0) { %>
                            <div class="alert alert-success">
                                <%= messages.success %>
                            </div>
                        <% } %>
                        <form action="/reviews/add" method="POST">
                            <input type="hidden" name="product_id" value="<%= product.id %>">
                            <div class="rating-input">
                                <label class="rating-label" for="star">Your Rating</label>
                                <div class="stars">
                                    <% for(let i = 5; i >= 1; i--) { %>
                                        <input type="radio" id="star<%= i %>" name="rating" value="<%= i %>">
                                        <label for="star<%= i %>">★</label>
                                    <% } %>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="review-title">Title</label>
                                <input type="text" id="review-title" name="title" required>
                            </div>
                            <div class="form-group">
                                <label for="review-content">Review</label>
                                <textarea id="review-content" name="content" required></textarea>
                            </div>
                            <button type="submit" <%= !locals.user ? 'disabled' : '' %>>
                                <%= locals.user ? 'Submit Review' : 'Please Login to Review' %>
                            </button>
                        </form>
                    </div>

                    <div class="reviews-list">
                        <% if (reviews && reviews.length > 0) { %>
                            <% reviews.forEach(review => { %>
                                <div class="review-item">
                                    <div class="review-header">
                                        <div class="stars">
                                            <% for(let i = 1; i <= 5; i++) { %>
                                                <span class="star <%= i <= review.rating ? 'filled' : '' %>">★</span>
                                            <% } %>
                                        </div>
                                        <span class="review-date"><%= new Date(review.created_at).toLocaleDateString() %></span>
                                    </div>
                                    <div class="review-wrapper">
                                        <div class="customer-pfp">

                                        </div>
                                        <div class="customer-review-content">
                                            <h3 class="review-title"><%= review.title %></h3>
                                            <p class="review-content"><%= review.content %></p>
                                            <p class="reviewer-name">By <%= review.first_name %></p>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <p class="no-reviews">No reviews yet. Be the first to review this product!</p>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </section>


    <%- include('./partials/footer'); %>

    <script>
        const customSelect = document.querySelector('.custom-select');
        const trigger = customSelect.querySelector('.custom-select-trigger');
        const options = customSelect.querySelectorAll('.option');
        const selectedWeightIdInput = document.querySelector('#selected-weight-id');
        const selectedPriceInput = document.querySelector('#selected-price');
        const productPriceElement = document.querySelector('#product-price');
        const stockInfo = document.getElementById("stock-info");

        const defaultWeightId = "<%= product.weight_variants[0].weight_id %>";
        const defaultPrice = "<%= product.weight_variants[0].price.toFixed(2) %>";

        let selectedStock = parseInt(options[0].getAttribute("data-stock"));

        selectedWeightIdInput.value = defaultWeightId;
        selectedPriceInput.value = defaultPrice;

        trigger.addEventListener('click', () => {
          customSelect.classList.toggle('open');
        });
        
        options.forEach(option => {
            option.addEventListener('click', () => {
                trigger.textContent = option.textContent;
                
                const weightId = option.getAttribute('data-value');
                const price = option.getAttribute('data-price');
                selectedStock = parseInt(option.getAttribute("data-stock"));

                selectedWeightIdInput.value = weightId;
                selectedPriceInput.value = price;

                productPriceElement.textContent = `₱${price} PHP`;
                stockInfo.textContent = `Stock: ${selectedStock}`;

                customSelect.classList.remove('open');

                updateQuantity(1);
            });
        });
        
        // Cache DOM elements
        const increaseBtn = document.querySelector('.quantity-btn-container button:nth-child(3)');
        const decreaseBtn = document.querySelector('.quantity-btn-container button:nth-child(1)');
        const quantityInput = document.querySelector('.quantity-input');
        const quantityField = document.querySelector('#quantity');

        const productStock = parseInt(options[0].getAttribute("data-stock"));

        // Update both visible and hidden inputs
        function updateQuantity(newValue) {
            newValue = parseInt(newValue);
            if (newValue >= 1 && newValue <= selectedStock) {
                quantityInput.value = newValue;
                quantityField.value = newValue;
            } else {
                quantityInput.value = selectedStock;
                quantityField.value = selectedStock;
                Toast.show(`Insufficient stock. Only ${selectedStock} available.`, 'error');
            }
        }

        // Add event listeners for quantity buttons
        increaseBtn.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            const currentValue = parseInt(quantityInput.value) || 1;
            if (currentValue < selectedStock) {
                updateQuantity(currentValue + 1);
            }
        });

        decreaseBtn.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            const currentValue = parseInt(quantityInput.value) || 1;
            if (currentValue > 1) {
                updateQuantity(currentValue - 1);
            }
        });

        // Handle direct input changes
        quantityInput?.addEventListener('change', (e) => {
            let value = parseInt(e.target.value) || 1;
            // Ensure value is between 1 and product stock
            value = Math.max(1, Math.min(value, selectedStock));
            updateQuantity(value);
        });

        // Tab switching functionality
        document.querySelectorAll('.tab-btn').forEach(button => {
            button.addEventListener('click', () => {
                document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));
                document.querySelectorAll('.tab-pane').forEach(pane => pane.classList.remove('active'));

                button.classList.add('active');
                document.getElementById(button.dataset.tab).classList.add('active');
            });
        });

        const writeReviewBtn = document.querySelector('.write-review-btn');
        const reviewForm = document.querySelector('.review-form');

        writeReviewBtn.addEventListener('click', () => {
            reviewForm.style.display = reviewForm.style.display === 'none' ? 'block' : 'none';
        });

        const buyNowBtn = document.querySelector('#buyNowBtn');
        const buyNowForm = document.querySelector('#buyNowForm');
        const buyNowWeightId = document.querySelector('#buy-now-weight-id');
        const buyNowQuantity = document.querySelector('#buy-now-quantity');

        buyNowBtn.addEventListener('click', (e) => {
            e.preventDefault();

            const isLoggedIn = <%= !!locals.user %>;
            
            if (!isLoggedIn) {
                window.location.href = '/login';
                return;
            }
            
            // Create URL with query parameters
            const params = new URLSearchParams({
                buyNow: true,
                product_id: '<%= product.id %>',
                weight_id: selectedWeightIdInput.value,
                quantity: quantityField.value
            });
            
            // Redirect to checkout with parameters
            window.location.href = `/cart/checkout?${params.toString()}`;
        });

        // Add to cart form submission handler
        document.querySelector('.form').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            try {
                const formData = new FormData(e.target);
                const response = await fetch('/cart/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(Object.fromEntries(formData))
                });

                const result = await response.json();

                if (result.success) {
                    Toast.show('Product added to cart successfully!', 'success');
                } else {
                    Toast.show(result.error || 'Failed to add product to cart', 'error');
                }
            } catch (error) {
                Toast.show('Error adding product to cart', 'error');
            }
        });

    </script>

</body>
</html>